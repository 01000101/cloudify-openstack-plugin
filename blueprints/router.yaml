tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.2/resources/rest-service/cloudify/types/types.yaml
  - plugin.yaml

inputs:

  username:
    description: OS_USERNAME as specified in Openstack RC file.

  password:
    description: Openstack user password.

  tenant_name:
    description: OS_TENANT_NAME as specified in Openstack RC file.

  auth_url:
    description: OS_AUTH_URL as specified in Openstack RC file.

  region:
    description: OS_REGION_NAME as specified in Openstack RC file.

  external_network_name:
    description: Openstack tenant external network name.

dsl_definitions:

  client_config: &client_config
    username: { get_input: username }
    password: { get_input: password }
    tenant_name: { get_input: tenant_name }
    auth_url: { get_input: auth_url }
    region: { get_input: region }

node_templates:

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id: { get_input: external_network_name }

  router_blueprint_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      resource_id: router_blueprint_network

  router_blueprint_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *client_config
      resource_id: router_blueprint_subnet
      subnet:
        ip_version: 4
        cidr: 192.168.121.0/24
        allocation_pools: 
        - start: 192.168.121.2
          end: 192.168.121.254
    relationships:
    - type: cloudify.relationships.contained_in
      target: router_blueprint_network

  router_blueprint_router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *client_config
      resource_id: router_blueprint_router
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: openstack.neutron_plugin.router.update
          inputs:
            args:
              admin_state_up: False
              external_gateway_info:
                network_id: { get_attribute: [ router_blueprint_network, external_id ] }
                external_fixed_ips:
                  - subnet_id: { get_attribute: [ router_blueprint_subnet, external_id ] }
                    ip_address:  192.168.121.3
              routes:
                - nexthop: 192.168.121.3
                  destination: 192.168.120.0/24
    relationships:
    - type: cloudify.relationships.connected_to
      target: router_blueprint_network
    - type: cloudify.relationships.depends_on
      target: router_blueprint_subnet
